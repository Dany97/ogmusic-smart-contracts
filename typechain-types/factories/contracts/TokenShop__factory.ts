/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TokenShop, TokenShopInterface } from "../../contracts/TokenShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToBuy",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokensAddress",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a8c806100206000396000f3fe60806040526004361061001e5760003560e01c8063c625e9b114610023575b600080fd5b61003d60048036038101906100389190610567565b61003f565b005b60008190508073ffffffffffffffffffffffffffffffffffffffff1663235b6ea16040518163ffffffff1660e01b815260040160206040518083038186803b15801561008a57600080fd5b505afa15801561009e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c291906105bc565b836100cd9190610618565b341461010e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610105906106cf565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561015657600080fd5b505afa15801561016a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018e9190610728565b600a61019a9190610888565b846101a59190610618565b9050808273ffffffffffffffffffffffffffffffffffffffff166370a082318473ffffffffffffffffffffffffffffffffffffffff1663b2bdfa7b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561020a57600080fd5b505afa15801561021e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024291906108e8565b6040518263ffffffff1660e01b815260040161025e9190610924565b60206040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906105bc565b10156102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e69061098b565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8373ffffffffffffffffffffffffffffffffffffffff1663b2bdfa7b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561035157600080fd5b505afa158015610365573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038991906108e8565b33846040518463ffffffff1660e01b81526004016103a9939291906109ba565b602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610a29565b61040457600080fd5b8173ffffffffffffffffffffffffffffffffffffffff1663b2bdfa7b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561044a57600080fd5b505afa15801561045e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048291906108e8565b73ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156104c7573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b6104e6816104d3565b81146104f157600080fd5b50565b600081359050610503816104dd565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053482610509565b9050919050565b61054481610529565b811461054f57600080fd5b50565b6000813590506105618161053b565b92915050565b6000806040838503121561057e5761057d6104ce565b5b600061058c858286016104f4565b925050602061059d85828601610552565b9150509250929050565b6000815190506105b6816104dd565b92915050565b6000602082840312156105d2576105d16104ce565b5b60006105e0848285016105a7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610623826104d3565b915061062e836104d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610667576106666105e9565b5b828202905092915050565b600082825260208201905092915050565b7f696e636f72726563742070726963650000000000000000000000000000000000600082015250565b60006106b9600f83610672565b91506106c482610683565b602082019050919050565b600060208201905081810360008301526106e8816106ac565b9050919050565b600060ff82169050919050565b610705816106ef565b811461071057600080fd5b50565b600081519050610722816106fc565b92915050565b60006020828403121561073e5761073d6104ce565b5b600061074c84828501610713565b91505092915050565b60008160011c9050919050565b6000808291508390505b60018511156107ac57808604811115610788576107876105e9565b5b60018516156107975780820291505b80810290506107a585610755565b945061076c565b94509492505050565b6000826107c55760019050610881565b816107d35760009050610881565b81600181146107e957600281146107f357610822565b6001915050610881565b60ff841115610805576108046105e9565b5b8360020a91508482111561081c5761081b6105e9565b5b50610881565b5060208310610133831016604e8410600b84101617156108575782820a905083811115610852576108516105e9565b5b610881565b6108648484846001610762565b9250905081840481111561087b5761087a6105e9565b5b81810290505b9392505050565b6000610893826104d3565b915061089e836106ef565b92506108cb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107b5565b905092915050565b6000815190506108e28161053b565b92915050565b6000602082840312156108fe576108fd6104ce565b5b600061090c848285016108d3565b91505092915050565b61091e81610529565b82525050565b60006020820190506109396000830184610915565b92915050565b7f616c6c2074686520746f6b656e732068617665206265656e20736f6c64000000600082015250565b6000610975601d83610672565b91506109808261093f565b602082019050919050565b600060208201905081810360008301526109a481610968565b9050919050565b6109b4816104d3565b82525050565b60006060820190506109cf6000830186610915565b6109dc6020830185610915565b6109e960408301846109ab565b949350505050565b60008115159050919050565b610a06816109f1565b8114610a1157600080fd5b50565b600081519050610a23816109fd565b92915050565b600060208284031215610a3f57610a3e6104ce565b5b6000610a4d84828501610a14565b9150509291505056fea26469706673582212205120513cf1e12f70091db1d8f4a4f281f33bee8c994b0c14cac12a02ab7b5f7064736f6c63430008090033";

type TokenShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenShop__factory extends ContractFactory {
  constructor(...args: TokenShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenShop> {
    return super.deploy(overrides || {}) as Promise<TokenShop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenShop {
    return super.attach(address) as TokenShop;
  }
  override connect(signer: Signer): TokenShop__factory {
    return super.connect(signer) as TokenShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenShopInterface {
    return new utils.Interface(_abi) as TokenShopInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenShop {
    return new Contract(address, _abi, signerOrProvider) as TokenShop;
  }
}
