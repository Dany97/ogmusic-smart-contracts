/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20SharesGenerator,
  ERC20SharesGeneratorInterface,
} from "../../../contracts/utils/ERC20SharesGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "priceMatic",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceWETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUSDT",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceUSD",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_linkedNFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_priceMatic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_priceUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_priceUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_priceWETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600960006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162001e3e38038062001e3e833981810160405281019062000052919062000338565b858581600390805190602001906200006c929190620000b0565b50806004908051906020019062000085929190620000b0565b5050508360058190555082600681905550816007819055508060088190555050505050505062000477565b828054620000be9062000441565b90600052602060002090601f016020900481019282620000e257600085556200012e565b82601f10620000fd57805160ff19168380011785556200012e565b828001600101855582156200012e579182015b828111156200012d57825182559160200191906001019062000110565b5b5090506200013d919062000141565b5090565b5b808211156200015c57600081600090555060010162000142565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001c9826200017e565b810181811067ffffffffffffffff82111715620001eb57620001ea6200018f565b5b80604052505050565b60006200020062000160565b90506200020e8282620001be565b919050565b600067ffffffffffffffff8211156200023157620002306200018f565b5b6200023c826200017e565b9050602081019050919050565b60005b83811015620002695780820151818401526020810190506200024c565b8381111562000279576000848401525b50505050565b600062000296620002908462000213565b620001f4565b905082815260208101848484011115620002b557620002b462000179565b5b620002c284828562000249565b509392505050565b600082601f830112620002e257620002e162000174565b5b8151620002f48482602086016200027f565b91505092915050565b6000819050919050565b6200031281620002fd565b81146200031e57600080fd5b50565b600081519050620003328162000307565b92915050565b60008060008060008060c087890312156200035857620003576200016a565b5b600087015167ffffffffffffffff8111156200037957620003786200016f565b5b6200038789828a01620002ca565b965050602087015167ffffffffffffffff811115620003ab57620003aa6200016f565b5b620003b989828a01620002ca565b9550506040620003cc89828a0162000321565b9450506060620003df89828a0162000321565b9350506080620003f289828a0162000321565b92505060a06200040589828a0162000321565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200045a57607f821691505b6020821081141562000471576200047062000412565b5b50919050565b6119b780620004876000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063320c89b5116100ad578063a457c2d711610071578063a457c2d714610322578063a9059cbb14610352578063b2bdfa7b14610382578063dd62ed3e146103a0578063de29e50e146103d057610121565b8063320c89b514610268578063395093511461028657806370a08231146102b657806374084240146102e657806395d89b411461030457610121565b806318160ddd116100f457806318160ddd146101c057806320717ef8146101de57806323b872dd146101fc578063313ce5671461022c578063316ea7bb1461024a57610121565b806306fdde0314610126578063095ea7b3146101445780630d4d151314610174578063150b7a0214610190575b600080fd5b61012e6103ee565b60405161013b9190610f6b565b60405180910390f35b61015e60048036038101906101599190611035565b610480565b60405161016b9190611090565b60405180910390f35b61018e600480360381019061018991906110ab565b6104a3565b005b6101aa60048036038101906101a59190611233565b610581565b6040516101b791906112f1565b60405180910390f35b6101c86105b0565b6040516101d5919061131b565b60405180910390f35b6101e66105ba565b6040516101f3919061131b565b60405180910390f35b61021660048036038101906102119190611336565b6105c0565b6040516102239190611090565b60405180910390f35b6102346105ef565b60405161024191906113a5565b60405180910390f35b6102526105f8565b60405161025f919061131b565b60405180910390f35b6102706105fe565b60405161027d919061131b565b60405180910390f35b6102a0600480360381019061029b9190611035565b610604565b6040516102ad9190611090565b60405180910390f35b6102d060048036038101906102cb91906113c0565b61063b565b6040516102dd919061131b565b60405180910390f35b6102ee610683565b6040516102fb919061131b565b60405180910390f35b61030c610689565b6040516103199190610f6b565b60405180910390f35b61033c60048036038101906103379190611035565b61071b565b6040516103499190611090565b60405180910390f35b61036c60048036038101906103679190611035565b610792565b6040516103799190611090565b60405180910390f35b61038a6107b5565b60405161039791906113fc565b60405180910390f35b6103ba60048036038101906103b59190611417565b6107db565b6040516103c7919061131b565b60405180910390f35b6103d8610862565b6040516103e591906113fc565b60405180910390f35b6060600380546103fd90611486565b80601f016020809104026020016040519081016040528092919081815260200182805461042990611486565b80156104765780601f1061044b57610100808354040283529160200191610476565b820191906000526020600020905b81548152906001019060200180831161045957829003601f168201915b5050505050905090565b60008061048b610888565b9050610498818585610890565b600191505092915050565b60011515600960009054906101000a900460ff161515146104c357600080fd5b6104cd8383610a5b565b80600960016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555032600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061057c600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163084610890565b505050565b60006001600960006101000a81548160ff02191690831515021790555063150b7a0260e01b9050949350505050565b6000600254905090565b60085481565b6000806105cb610888565b90506105d8858285610bbb565b6105e3858585610c47565b60019150509392505050565b60006012905090565b60055481565b60075481565b60008061060f610888565b905061063081858561062185896107db565b61062b91906114e7565b610890565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60065481565b60606004805461069890611486565b80601f01602080910402602001604051908101604052809291908181526020018280546106c490611486565b80156107115780601f106106e657610100808354040283529160200191610711565b820191906000526020600020905b8154815290600101906020018083116106f457829003601f168201915b5050505050905090565b600080610726610888565b9050600061073482866107db565b905083811015610779576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610770906115af565b60405180910390fd5b6107868286868403610890565b60019250505092915050565b60008061079d610888565b90506107aa818585610c47565b600191505092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600960019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f790611641565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610970576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610967906116d3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a4e919061131b565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac29061173f565b60405180910390fd5b610ad760008383610ec8565b8060026000828254610ae991906114e7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b3e91906114e7565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ba3919061131b565b60405180910390a3610bb760008383610ecd565b5050565b6000610bc784846107db565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c415781811015610c33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2a906117ab565b60405180910390fd5b610c408484848403610890565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cae9061183d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1e906118cf565b60405180910390fd5b610d32838383610ec8565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610db8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daf90611961565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e4b91906114e7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eaf919061131b565b60405180910390a3610ec2848484610ecd565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f0c578082015181840152602081019050610ef1565b83811115610f1b576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f3d82610ed2565b610f478185610edd565b9350610f57818560208601610eee565b610f6081610f21565b840191505092915050565b60006020820190508181036000830152610f858184610f32565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fcc82610fa1565b9050919050565b610fdc81610fc1565b8114610fe757600080fd5b50565b600081359050610ff981610fd3565b92915050565b6000819050919050565b61101281610fff565b811461101d57600080fd5b50565b60008135905061102f81611009565b92915050565b6000806040838503121561104c5761104b610f97565b5b600061105a85828601610fea565b925050602061106b85828601611020565b9150509250929050565b60008115159050919050565b61108a81611075565b82525050565b60006020820190506110a56000830184611081565b92915050565b6000806000606084860312156110c4576110c3610f97565b5b60006110d286828701610fea565b93505060206110e386828701611020565b92505060406110f486828701610fea565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61114082610f21565b810181811067ffffffffffffffff8211171561115f5761115e611108565b5b80604052505050565b6000611172610f8d565b905061117e8282611137565b919050565b600067ffffffffffffffff82111561119e5761119d611108565b5b6111a782610f21565b9050602081019050919050565b82818337600083830152505050565b60006111d66111d184611183565b611168565b9050828152602081018484840111156111f2576111f1611103565b5b6111fd8482856111b4565b509392505050565b600082601f83011261121a576112196110fe565b5b813561122a8482602086016111c3565b91505092915050565b6000806000806080858703121561124d5761124c610f97565b5b600061125b87828801610fea565b945050602061126c87828801610fea565b935050604061127d87828801611020565b925050606085013567ffffffffffffffff81111561129e5761129d610f9c565b5b6112aa87828801611205565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112eb816112b6565b82525050565b600060208201905061130660008301846112e2565b92915050565b61131581610fff565b82525050565b6000602082019050611330600083018461130c565b92915050565b60008060006060848603121561134f5761134e610f97565b5b600061135d86828701610fea565b935050602061136e86828701610fea565b925050604061137f86828701611020565b9150509250925092565b600060ff82169050919050565b61139f81611389565b82525050565b60006020820190506113ba6000830184611396565b92915050565b6000602082840312156113d6576113d5610f97565b5b60006113e484828501610fea565b91505092915050565b6113f681610fc1565b82525050565b600060208201905061141160008301846113ed565b92915050565b6000806040838503121561142e5761142d610f97565b5b600061143c85828601610fea565b925050602061144d85828601610fea565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061149e57607f821691505b602082108114156114b2576114b1611457565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114f282610fff565b91506114fd83610fff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611532576115316114b8565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611599602583610edd565b91506115a48261153d565b604082019050919050565b600060208201905081810360008301526115c88161158c565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061162b602483610edd565b9150611636826115cf565b604082019050919050565b6000602082019050818103600083015261165a8161161e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006116bd602283610edd565b91506116c882611661565b604082019050919050565b600060208201905081810360008301526116ec816116b0565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611729601f83610edd565b9150611734826116f3565b602082019050919050565b600060208201905081810360008301526117588161171c565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611795601d83610edd565b91506117a08261175f565b602082019050919050565b600060208201905081810360008301526117c481611788565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611827602583610edd565b9150611832826117cb565b604082019050919050565b600060208201905081810360008301526118568161181a565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118b9602383610edd565b91506118c48261185d565b604082019050919050565b600060208201905081810360008301526118e8816118ac565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061194b602683610edd565b9150611956826118ef565b604082019050919050565b6000602082019050818103600083015261197a8161193e565b905091905056fea2646970667358221220f19ca9c0e0b41d2495c9c2998182fe1d2535d771f551b14f7ddccb67be4973ed64736f6c63430008090033";

type ERC20SharesGeneratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20SharesGeneratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20SharesGenerator__factory extends ContractFactory {
  constructor(...args: ERC20SharesGeneratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    priceMatic: PromiseOrValue<BigNumberish>,
    priceWETH: PromiseOrValue<BigNumberish>,
    priceUSDT: PromiseOrValue<BigNumberish>,
    priceUSD: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20SharesGenerator> {
    return super.deploy(
      _name,
      _symbol,
      priceMatic,
      priceWETH,
      priceUSDT,
      priceUSD,
      overrides || {}
    ) as Promise<ERC20SharesGenerator>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    priceMatic: PromiseOrValue<BigNumberish>,
    priceWETH: PromiseOrValue<BigNumberish>,
    priceUSDT: PromiseOrValue<BigNumberish>,
    priceUSD: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      priceMatic,
      priceWETH,
      priceUSDT,
      priceUSD,
      overrides || {}
    );
  }
  override attach(address: string): ERC20SharesGenerator {
    return super.attach(address) as ERC20SharesGenerator;
  }
  override connect(signer: Signer): ERC20SharesGenerator__factory {
    return super.connect(signer) as ERC20SharesGenerator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20SharesGeneratorInterface {
    return new utils.Interface(_abi) as ERC20SharesGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20SharesGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20SharesGenerator;
  }
}
