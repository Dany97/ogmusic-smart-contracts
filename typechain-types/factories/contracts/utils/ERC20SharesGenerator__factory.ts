/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20SharesGenerator,
  ERC20SharesGeneratorInterface,
} from "../../../contracts/utils/ERC20SharesGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rightsPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLinkedNFT",
    outputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "linkNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600760006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162001d7b38038062001d7b833981810160405281019062000052919062000328565b838381600390805190602001906200006c929190620000a0565b50806004908051906020019062000085929190620000a0565b5050508160068190555080600881905550505050506200043d565b828054620000ae9062000407565b90600052602060002090601f016020900481019282620000d257600085556200011e565b82601f10620000ed57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011d57825182559160200191906001019062000100565b5b5090506200012d919062000131565b5090565b5b808211156200014c57600081600090555060010162000132565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b9826200016e565b810181811067ffffffffffffffff82111715620001db57620001da6200017f565b5b80604052505050565b6000620001f062000150565b9050620001fe8282620001ae565b919050565b600067ffffffffffffffff8211156200022157620002206200017f565b5b6200022c826200016e565b9050602081019050919050565b60005b83811015620002595780820151818401526020810190506200023c565b8381111562000269576000848401525b50505050565b600062000286620002808462000203565b620001e4565b905082815260208101848484011115620002a557620002a462000169565b5b620002b284828562000239565b509392505050565b600082601f830112620002d257620002d162000164565b5b8151620002e48482602086016200026f565b91505092915050565b6000819050919050565b6200030281620002ed565b81146200030e57600080fd5b50565b6000815190506200032281620002f7565b92915050565b600080600080608085870312156200034557620003446200015a565b5b600085015167ffffffffffffffff8111156200036657620003656200015f565b5b6200037487828801620002ba565b945050602085015167ffffffffffffffff8111156200039857620003976200015f565b5b620003a687828801620002ba565b9350506040620003b98782880162000311565b9250506060620003cc8782880162000311565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200042057607f821691505b60208210811415620004375762000436620003d8565b5b50919050565b61192e806200044d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146102d7578063aadd048814610307578063b6fdf7d314610323578063dd62ed3e1461034157610100565b806370a082311461023b57806395d89b411461026b57806398d5fdca14610289578063a457c2d7146102a757610100565b806323b872dd116100d357806323b872dd146101a1578063313ce567146101d157806339509351146101ef57806340c10f191461021f57610100565b806306fdde0314610105578063095ea7b314610123578063150b7a021461015357806318160ddd14610183575b600080fd5b61010d610371565b60405161011a9190610ec9565b60405180910390f35b61013d60048036038101906101389190610f93565b610403565b60405161014a9190610fee565b60405180910390f35b61016d6004803603810190610168919061113e565b610426565b60405161017a91906111fc565b60405180910390f35b61018b610455565b6040516101989190611226565b60405180910390f35b6101bb60048036038101906101b69190611241565b61045f565b6040516101c89190610fee565b60405180910390f35b6101d961048e565b6040516101e691906112b0565b60405180910390f35b61020960048036038101906102049190610f93565b610497565b6040516102169190610fee565b60405180910390f35b61023960048036038101906102349190610f93565b6104ce565b005b610255600480360381019061025091906112cb565b610573565b6040516102629190611226565b60405180910390f35b6102736105bb565b6040516102809190610ec9565b60405180910390f35b61029161064d565b60405161029e9190611226565b60405180910390f35b6102c160048036038101906102bc9190610f93565b610657565b6040516102ce9190610fee565b60405180910390f35b6102f160048036038101906102ec9190610f93565b6106ce565b6040516102fe9190610fee565b60405180910390f35b610321600480360381019061031c91906112cb565b6106f1565b005b61032b610735565b6040516103389190611307565b60405180910390f35b61035b60048036038101906103569190611322565b61075f565b6040516103689190611226565b60405180910390f35b60606003805461038090611391565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90611391565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b60008061040e6107e6565b905061041b8185856107ee565b600191505092915050565b60006001600760006101000a81548160ff02191690831515021790555063150b7a0260e01b9050949350505050565b6000600254905090565b60008061046a6107e6565b90506104778582856109b9565b610482858585610a45565b60019150509392505050565b60006012905090565b6000806104a26107e6565b90506104c38185856104b4858961075f565b6104be91906113f2565b6107ee565b600191505092915050565b60011515600760009054906101000a900460ff16151514610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90611494565b60405180910390fd5b61052e8282610cc6565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105ca90611391565b80601f01602080910402602001604051908101604052809291908181526020018280546105f690611391565b80156106435780601f1061061857610100808354040283529160200191610643565b820191906000526020600020905b81548152906001019060200180831161062657829003601f168201915b5050505050905090565b6000600654905090565b6000806106626107e6565b90506000610670828661075f565b9050838110156106b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ac90611526565b60405180910390fd5b6106c282868684036107ee565b60019250505092915050565b6000806106d96107e6565b90506106e6818585610a45565b600191505092915050565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561085e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610855906115b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c59061164a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109ac9190611226565b60405180910390a3505050565b60006109c5848461075f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a3f5781811015610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a28906116b6565b60405180910390fd5b610a3e84848484036107ee565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90611748565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c906117da565b60405180910390fd5b610b30838383610e26565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bad9061186c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c4991906113f2565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cad9190611226565b60405180910390a3610cc0848484610e2b565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2d906118d8565b60405180910390fd5b610d4260008383610e26565b8060026000828254610d5491906113f2565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610da991906113f2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e0e9190611226565b60405180910390a3610e2260008383610e2b565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e6a578082015181840152602081019050610e4f565b83811115610e79576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e9b82610e30565b610ea58185610e3b565b9350610eb5818560208601610e4c565b610ebe81610e7f565b840191505092915050565b60006020820190508181036000830152610ee38184610e90565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2a82610eff565b9050919050565b610f3a81610f1f565b8114610f4557600080fd5b50565b600081359050610f5781610f31565b92915050565b6000819050919050565b610f7081610f5d565b8114610f7b57600080fd5b50565b600081359050610f8d81610f67565b92915050565b60008060408385031215610faa57610fa9610ef5565b5b6000610fb885828601610f48565b9250506020610fc985828601610f7e565b9150509250929050565b60008115159050919050565b610fe881610fd3565b82525050565b60006020820190506110036000830184610fdf565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61104b82610e7f565b810181811067ffffffffffffffff8211171561106a57611069611013565b5b80604052505050565b600061107d610eeb565b90506110898282611042565b919050565b600067ffffffffffffffff8211156110a9576110a8611013565b5b6110b282610e7f565b9050602081019050919050565b82818337600083830152505050565b60006110e16110dc8461108e565b611073565b9050828152602081018484840111156110fd576110fc61100e565b5b6111088482856110bf565b509392505050565b600082601f83011261112557611124611009565b5b81356111358482602086016110ce565b91505092915050565b6000806000806080858703121561115857611157610ef5565b5b600061116687828801610f48565b945050602061117787828801610f48565b935050604061118887828801610f7e565b925050606085013567ffffffffffffffff8111156111a9576111a8610efa565b5b6111b587828801611110565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111f6816111c1565b82525050565b600060208201905061121160008301846111ed565b92915050565b61122081610f5d565b82525050565b600060208201905061123b6000830184611217565b92915050565b60008060006060848603121561125a57611259610ef5565b5b600061126886828701610f48565b935050602061127986828701610f48565b925050604061128a86828701610f7e565b9150509250925092565b600060ff82169050919050565b6112aa81611294565b82525050565b60006020820190506112c560008301846112a1565b92915050565b6000602082840312156112e1576112e0610ef5565b5b60006112ef84828501610f48565b91505092915050565b61130181610f1f565b82525050565b600060208201905061131c60008301846112f8565b92915050565b6000806040838503121561133957611338610ef5565b5b600061134785828601610f48565b925050602061135885828601610f48565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113a957607f821691505b602082108114156113bd576113bc611362565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113fd82610f5d565b915061140883610f5d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561143d5761143c6113c3565b5b828201905092915050565b7f546f6b656e206e6f74206465706f736974656400000000000000000000000000600082015250565b600061147e601383610e3b565b915061148982611448565b602082019050919050565b600060208201905081810360008301526114ad81611471565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611510602583610e3b565b915061151b826114b4565b604082019050919050565b6000602082019050818103600083015261153f81611503565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006115a2602483610e3b565b91506115ad82611546565b604082019050919050565b600060208201905081810360008301526115d181611595565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611634602283610e3b565b915061163f826115d8565b604082019050919050565b6000602082019050818103600083015261166381611627565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116a0601d83610e3b565b91506116ab8261166a565b602082019050919050565b600060208201905081810360008301526116cf81611693565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611732602583610e3b565b915061173d826116d6565b604082019050919050565b6000602082019050818103600083015261176181611725565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006117c4602383610e3b565b91506117cf82611768565b604082019050919050565b600060208201905081810360008301526117f3816117b7565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611856602683610e3b565b9150611861826117fa565b604082019050919050565b6000602082019050818103600083015261188581611849565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006118c2601f83610e3b565b91506118cd8261188c565b602082019050919050565b600060208201905081810360008301526118f1816118b5565b905091905056fea2646970667358221220e7c56e2ba3ad87a97c2efbf55043ae5bbbe699027379d0d0dbbdeac89f6d214964736f6c63430008090033";

type ERC20SharesGeneratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20SharesGeneratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20SharesGenerator__factory extends ContractFactory {
  constructor(...args: ERC20SharesGeneratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    price: PromiseOrValue<BigNumberish>,
    rightsPercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20SharesGenerator> {
    return super.deploy(
      _name,
      _symbol,
      price,
      rightsPercentage,
      overrides || {}
    ) as Promise<ERC20SharesGenerator>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    price: PromiseOrValue<BigNumberish>,
    rightsPercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      price,
      rightsPercentage,
      overrides || {}
    );
  }
  override attach(address: string): ERC20SharesGenerator {
    return super.attach(address) as ERC20SharesGenerator;
  }
  override connect(signer: Signer): ERC20SharesGenerator__factory {
    return super.connect(signer) as ERC20SharesGenerator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20SharesGeneratorInterface {
    return new utils.Interface(_abi) as ERC20SharesGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20SharesGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20SharesGenerator;
  }
}
