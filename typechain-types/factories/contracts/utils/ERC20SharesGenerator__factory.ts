/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20SharesGenerator,
  ERC20SharesGeneratorInterface,
} from "../../../contracts/utils/ERC20SharesGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "priceUSDT",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_linkedNFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_priceUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600660006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162001d4538038062001d45833981810160405281019062000052919062000320565b828281600390805190602001906200006c92919062000098565b5080600490805190602001906200008592919062000098565b505050806005819055505050506200041f565b828054620000a690620003e9565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b18262000166565b810181811067ffffffffffffffff82111715620001d357620001d262000177565b5b80604052505050565b6000620001e862000148565b9050620001f68282620001a6565b919050565b600067ffffffffffffffff82111562000219576200021862000177565b5b620002248262000166565b9050602081019050919050565b60005b838110156200025157808201518184015260208101905062000234565b8381111562000261576000848401525b50505050565b60006200027e6200027884620001fb565b620001dc565b9050828152602081018484840111156200029d576200029c62000161565b5b620002aa84828562000231565b509392505050565b600082601f830112620002ca57620002c96200015c565b5b8151620002dc84826020860162000267565b91505092915050565b6000819050919050565b620002fa81620002e5565b81146200030657600080fd5b50565b6000815190506200031a81620002ef565b92915050565b6000806000606084860312156200033c576200033b62000152565b5b600084015167ffffffffffffffff8111156200035d576200035c62000157565b5b6200036b86828701620002b2565b935050602084015167ffffffffffffffff8111156200038f576200038e62000157565b5b6200039d86828701620002b2565b9250506040620003b08682870162000309565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040257607f821691505b60208210811415620004195762000418620003ba565b5b50919050565b611916806200042f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146102d7578063b2bdfa7b14610307578063dd62ed3e14610325578063de29e50e1461035557610100565b806370a082311461023d57806394bf804d1461026d57806395d89b4114610289578063a457c2d7146102a757610100565b806323b872dd116100d357806323b872dd146101a1578063313ce567146101d1578063320c89b5146101ef578063395093511461020d57610100565b806306fdde0314610105578063095ea7b314610123578063150b7a021461015357806318160ddd14610183575b600080fd5b61010d610373565b60405161011a9190610edd565b60405180910390f35b61013d60048036038101906101389190610fa7565b610405565b60405161014a9190611002565b60405180910390f35b61016d60048036038101906101689190611152565b610428565b60405161017a9190611210565b60405180910390f35b61018b610457565b604051610198919061123a565b60405180910390f35b6101bb60048036038101906101b69190611255565b610461565b6040516101c89190611002565b60405180910390f35b6101d9610490565b6040516101e691906112c4565b60405180910390f35b6101f7610499565b604051610204919061123a565b60405180910390f35b61022760048036038101906102229190610fa7565b61049f565b6040516102349190611002565b60405180910390f35b610257600480360381019061025291906112df565b6104d6565b604051610264919061123a565b60405180910390f35b6102876004803603810190610282919061130c565b61051e565b005b6102916105fb565b60405161029e9190610edd565b60405180910390f35b6102c160048036038101906102bc9190610fa7565b61068d565b6040516102ce9190611002565b60405180910390f35b6102f160048036038101906102ec9190610fa7565b610704565b6040516102fe9190611002565b60405180910390f35b61030f610727565b60405161031c919061135b565b60405180910390f35b61033f600480360381019061033a9190611376565b61074d565b60405161034c919061123a565b60405180910390f35b61035d6107d4565b60405161036a919061135b565b60405180910390f35b606060038054610382906113e5565b80601f01602080910402602001604051908101604052809291908181526020018280546103ae906113e5565b80156103fb5780601f106103d0576101008083540402835291602001916103fb565b820191906000526020600020905b8154815290600101906020018083116103de57829003601f168201915b5050505050905090565b6000806104106107fa565b905061041d818585610802565b600191505092915050565b60006001600660006101000a81548160ff02191690831515021790555063150b7a0260e01b9050949350505050565b6000600254905090565b60008061046c6107fa565b90506104798582856109cd565b610484858585610a59565b60019150509392505050565b60006012905090565b60055481565b6000806104aa6107fa565b90506104cb8185856104bc858961074d565b6104c69190611446565b610802565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60011515600660009054906101000a900460ff1615151461053e57600080fd5b6105483283610cda565b80600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555032600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105f7600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163084610802565b5050565b60606004805461060a906113e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610636906113e5565b80156106835780601f1061065857610100808354040283529160200191610683565b820191906000526020600020905b81548152906001019060200180831161066657829003601f168201915b5050505050905090565b6000806106986107fa565b905060006106a6828661074d565b9050838110156106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e29061150e565b60405180910390fd5b6106f88286868403610802565b60019250505092915050565b60008061070f6107fa565b905061071c818585610a59565b600191505092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610872576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610869906115a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990611632565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109c0919061123a565b60405180910390a3505050565b60006109d9848461074d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a535781811015610a45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3c9061169e565b60405180910390fd5b610a528484848403610802565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac090611730565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b30906117c2565b60405180910390fd5b610b44838383610e3a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc190611854565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c5d9190611446565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cc1919061123a565b60405180910390a3610cd4848484610e3f565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d41906118c0565b60405180910390fd5b610d5660008383610e3a565b8060026000828254610d689190611446565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dbd9190611446565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e22919061123a565b60405180910390a3610e3660008383610e3f565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e7e578082015181840152602081019050610e63565b83811115610e8d576000848401525b50505050565b6000601f19601f8301169050919050565b6000610eaf82610e44565b610eb98185610e4f565b9350610ec9818560208601610e60565b610ed281610e93565b840191505092915050565b60006020820190508181036000830152610ef78184610ea4565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3e82610f13565b9050919050565b610f4e81610f33565b8114610f5957600080fd5b50565b600081359050610f6b81610f45565b92915050565b6000819050919050565b610f8481610f71565b8114610f8f57600080fd5b50565b600081359050610fa181610f7b565b92915050565b60008060408385031215610fbe57610fbd610f09565b5b6000610fcc85828601610f5c565b9250506020610fdd85828601610f92565b9150509250929050565b60008115159050919050565b610ffc81610fe7565b82525050565b60006020820190506110176000830184610ff3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61105f82610e93565b810181811067ffffffffffffffff8211171561107e5761107d611027565b5b80604052505050565b6000611091610eff565b905061109d8282611056565b919050565b600067ffffffffffffffff8211156110bd576110bc611027565b5b6110c682610e93565b9050602081019050919050565b82818337600083830152505050565b60006110f56110f0846110a2565b611087565b90508281526020810184848401111561111157611110611022565b5b61111c8482856110d3565b509392505050565b600082601f8301126111395761113861101d565b5b81356111498482602086016110e2565b91505092915050565b6000806000806080858703121561116c5761116b610f09565b5b600061117a87828801610f5c565b945050602061118b87828801610f5c565b935050604061119c87828801610f92565b925050606085013567ffffffffffffffff8111156111bd576111bc610f0e565b5b6111c987828801611124565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61120a816111d5565b82525050565b60006020820190506112256000830184611201565b92915050565b61123481610f71565b82525050565b600060208201905061124f600083018461122b565b92915050565b60008060006060848603121561126e5761126d610f09565b5b600061127c86828701610f5c565b935050602061128d86828701610f5c565b925050604061129e86828701610f92565b9150509250925092565b600060ff82169050919050565b6112be816112a8565b82525050565b60006020820190506112d960008301846112b5565b92915050565b6000602082840312156112f5576112f4610f09565b5b600061130384828501610f5c565b91505092915050565b6000806040838503121561132357611322610f09565b5b600061133185828601610f92565b925050602061134285828601610f5c565b9150509250929050565b61135581610f33565b82525050565b6000602082019050611370600083018461134c565b92915050565b6000806040838503121561138d5761138c610f09565b5b600061139b85828601610f5c565b92505060206113ac85828601610f5c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113fd57607f821691505b60208210811415611411576114106113b6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061145182610f71565b915061145c83610f71565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561149157611490611417565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006114f8602583610e4f565b91506115038261149c565b604082019050919050565b60006020820190508181036000830152611527816114eb565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061158a602483610e4f565b91506115958261152e565b604082019050919050565b600060208201905081810360008301526115b98161157d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061161c602283610e4f565b9150611627826115c0565b604082019050919050565b6000602082019050818103600083015261164b8161160f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611688601d83610e4f565b915061169382611652565b602082019050919050565b600060208201905081810360008301526116b78161167b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061171a602583610e4f565b9150611725826116be565b604082019050919050565b600060208201905081810360008301526117498161170d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006117ac602383610e4f565b91506117b782611750565b604082019050919050565b600060208201905081810360008301526117db8161179f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061183e602683610e4f565b9150611849826117e2565b604082019050919050565b6000602082019050818103600083015261186d81611831565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006118aa601f83610e4f565b91506118b582611874565b602082019050919050565b600060208201905081810360008301526118d98161189d565b905091905056fea26469706673582212204a8e95caf7b5c851a624eb1005734fdcc28c6a9973961eb6b579f6467774248a64736f6c63430008090033";

type ERC20SharesGeneratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20SharesGeneratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20SharesGenerator__factory extends ContractFactory {
  constructor(...args: ERC20SharesGeneratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    priceUSDT: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20SharesGenerator> {
    return super.deploy(
      _name,
      _symbol,
      priceUSDT,
      overrides || {}
    ) as Promise<ERC20SharesGenerator>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    priceUSDT: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      priceUSDT,
      overrides || {}
    );
  }
  override attach(address: string): ERC20SharesGenerator {
    return super.attach(address) as ERC20SharesGenerator;
  }
  override connect(signer: Signer): ERC20SharesGenerator__factory {
    return super.connect(signer) as ERC20SharesGenerator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20SharesGeneratorInterface {
    return new utils.Interface(_abi) as ERC20SharesGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20SharesGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20SharesGenerator;
  }
}
