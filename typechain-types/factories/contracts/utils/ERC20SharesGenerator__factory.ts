/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20SharesGenerator,
  ERC20SharesGeneratorInterface,
} from "../../../contracts/utils/ERC20SharesGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_linkedNFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600660006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162001d5938038062001d59833981810160405281019062000052919062000320565b828281600390805190602001906200006c92919062000098565b5080600490805190602001906200008592919062000098565b505050806005819055505050506200041f565b828054620000a690620003e9565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b18262000166565b810181811067ffffffffffffffff82111715620001d357620001d262000177565b5b80604052505050565b6000620001e862000148565b9050620001f68282620001a6565b919050565b600067ffffffffffffffff82111562000219576200021862000177565b5b620002248262000166565b9050602081019050919050565b60005b838110156200025157808201518184015260208101905062000234565b8381111562000261576000848401525b50505050565b60006200027e6200027884620001fb565b620001dc565b9050828152602081018484840111156200029d576200029c62000161565b5b620002aa84828562000231565b509392505050565b600082601f830112620002ca57620002c96200015c565b5b8151620002dc84826020860162000267565b91505092915050565b6000819050919050565b620002fa81620002e5565b81146200030657600080fd5b50565b6000815190506200031a81620002ef565b92915050565b6000806000606084860312156200033c576200033b62000152565b5b600084015167ffffffffffffffff8111156200035d576200035c62000157565b5b6200036b86828701620002b2565b935050602084015167ffffffffffffffff8111156200038f576200038e62000157565b5b6200039d86828701620002b2565b9250506040620003b08682870162000309565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040257607f821691505b60208210811415620004195762000418620003ba565b5b50919050565b61192a806200042f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80633950935111610097578063a9059cbb11610066578063a9059cbb146102d7578063b2bdfa7b14610307578063dd62ed3e14610325578063de29e50e1461035557610100565b8063395093511461022957806370a082311461025957806395d89b4114610289578063a457c2d7146102a757610100565b806318160ddd116100d357806318160ddd1461019f578063235b6ea1146101bd57806323b872dd146101db578063313ce5671461020b57610100565b806306fdde0314610105578063095ea7b3146101235780630d4d151314610153578063150b7a021461016f575b600080fd5b61010d610373565b60405161011a9190610ede565b60405180910390f35b61013d60048036038101906101389190610fa8565b610405565b60405161014a9190611003565b60405180910390f35b61016d6004803603810190610168919061101e565b610428565b005b610189600480360381019061018491906111a6565b610506565b6040516101969190611264565b60405180910390f35b6101a7610535565b6040516101b4919061128e565b60405180910390f35b6101c561053f565b6040516101d2919061128e565b60405180910390f35b6101f560048036038101906101f091906112a9565b610545565b6040516102029190611003565b60405180910390f35b610213610574565b6040516102209190611318565b60405180910390f35b610243600480360381019061023e9190610fa8565b61057d565b6040516102509190611003565b60405180910390f35b610273600480360381019061026e9190611333565b6105b4565b604051610280919061128e565b60405180910390f35b6102916105fc565b60405161029e9190610ede565b60405180910390f35b6102c160048036038101906102bc9190610fa8565b61068e565b6040516102ce9190611003565b60405180910390f35b6102f160048036038101906102ec9190610fa8565b610705565b6040516102fe9190611003565b60405180910390f35b61030f610728565b60405161031c919061136f565b60405180910390f35b61033f600480360381019061033a919061138a565b61074e565b60405161034c919061128e565b60405180910390f35b61035d6107d5565b60405161036a919061136f565b60405180910390f35b606060038054610382906113f9565b80601f01602080910402602001604051908101604052809291908181526020018280546103ae906113f9565b80156103fb5780601f106103d0576101008083540402835291602001916103fb565b820191906000526020600020905b8154815290600101906020018083116103de57829003601f168201915b5050505050905090565b6000806104106107fb565b905061041d818585610803565b600191505092915050565b60011515600660009054906101000a900460ff1615151461044857600080fd5b61045283836109ce565b80600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555032600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610501600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163084610803565b505050565b60006001600660006101000a81548160ff02191690831515021790555063150b7a0260e01b9050949350505050565b6000600254905090565b60055481565b6000806105506107fb565b905061055d858285610b2e565b610568858585610bba565b60019150509392505050565b60006012905090565b6000806105886107fb565b90506105a981858561059a858961074e565b6105a4919061145a565b610803565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461060b906113f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610637906113f9565b80156106845780601f1061065957610100808354040283529160200191610684565b820191906000526020600020905b81548152906001019060200180831161066757829003601f168201915b5050505050905090565b6000806106996107fb565b905060006106a7828661074e565b9050838110156106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e390611522565b60405180910390fd5b6106f98286868403610803565b60019250505092915050565b6000806107106107fb565b905061071d818585610bba565b600191505092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a906115b4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da90611646565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109c1919061128e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a35906116b2565b60405180910390fd5b610a4a60008383610e3b565b8060026000828254610a5c919061145a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ab1919061145a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b16919061128e565b60405180910390a3610b2a60008383610e40565b5050565b6000610b3a848461074e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bb45781811015610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d9061171e565b60405180910390fd5b610bb38484848403610803565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c21906117b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9190611842565b60405180910390fd5b610ca5838383610e3b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d22906118d4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dbe919061145a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e22919061128e565b60405180910390a3610e35848484610e40565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e7f578082015181840152602081019050610e64565b83811115610e8e576000848401525b50505050565b6000601f19601f8301169050919050565b6000610eb082610e45565b610eba8185610e50565b9350610eca818560208601610e61565b610ed381610e94565b840191505092915050565b60006020820190508181036000830152610ef88184610ea5565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3f82610f14565b9050919050565b610f4f81610f34565b8114610f5a57600080fd5b50565b600081359050610f6c81610f46565b92915050565b6000819050919050565b610f8581610f72565b8114610f9057600080fd5b50565b600081359050610fa281610f7c565b92915050565b60008060408385031215610fbf57610fbe610f0a565b5b6000610fcd85828601610f5d565b9250506020610fde85828601610f93565b9150509250929050565b60008115159050919050565b610ffd81610fe8565b82525050565b60006020820190506110186000830184610ff4565b92915050565b60008060006060848603121561103757611036610f0a565b5b600061104586828701610f5d565b935050602061105686828701610f93565b925050604061106786828701610f5d565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110b382610e94565b810181811067ffffffffffffffff821117156110d2576110d161107b565b5b80604052505050565b60006110e5610f00565b90506110f182826110aa565b919050565b600067ffffffffffffffff8211156111115761111061107b565b5b61111a82610e94565b9050602081019050919050565b82818337600083830152505050565b6000611149611144846110f6565b6110db565b90508281526020810184848401111561116557611164611076565b5b611170848285611127565b509392505050565b600082601f83011261118d5761118c611071565b5b813561119d848260208601611136565b91505092915050565b600080600080608085870312156111c0576111bf610f0a565b5b60006111ce87828801610f5d565b94505060206111df87828801610f5d565b93505060406111f087828801610f93565b925050606085013567ffffffffffffffff81111561121157611210610f0f565b5b61121d87828801611178565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61125e81611229565b82525050565b60006020820190506112796000830184611255565b92915050565b61128881610f72565b82525050565b60006020820190506112a3600083018461127f565b92915050565b6000806000606084860312156112c2576112c1610f0a565b5b60006112d086828701610f5d565b93505060206112e186828701610f5d565b92505060406112f286828701610f93565b9150509250925092565b600060ff82169050919050565b611312816112fc565b82525050565b600060208201905061132d6000830184611309565b92915050565b60006020828403121561134957611348610f0a565b5b600061135784828501610f5d565b91505092915050565b61136981610f34565b82525050565b60006020820190506113846000830184611360565b92915050565b600080604083850312156113a1576113a0610f0a565b5b60006113af85828601610f5d565b92505060206113c085828601610f5d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061141157607f821691505b60208210811415611425576114246113ca565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061146582610f72565b915061147083610f72565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114a5576114a461142b565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061150c602583610e50565b9150611517826114b0565b604082019050919050565b6000602082019050818103600083015261153b816114ff565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061159e602483610e50565b91506115a982611542565b604082019050919050565b600060208201905081810360008301526115cd81611591565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611630602283610e50565b915061163b826115d4565b604082019050919050565b6000602082019050818103600083015261165f81611623565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061169c601f83610e50565b91506116a782611666565b602082019050919050565b600060208201905081810360008301526116cb8161168f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611708601d83610e50565b9150611713826116d2565b602082019050919050565b60006020820190508181036000830152611737816116fb565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061179a602583610e50565b91506117a58261173e565b604082019050919050565b600060208201905081810360008301526117c98161178d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061182c602383610e50565b9150611837826117d0565b604082019050919050565b6000602082019050818103600083015261185b8161181f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118be602683610e50565b91506118c982611862565b604082019050919050565b600060208201905081810360008301526118ed816118b1565b905091905056fea264697066735822122058c26ec6483761d7bf4618e2a97e3c5dc34fd80ce7493cbcf4fa9fdeda97971c64736f6c63430008090033";

type ERC20SharesGeneratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20SharesGeneratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20SharesGenerator__factory extends ContractFactory {
  constructor(...args: ERC20SharesGeneratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20SharesGenerator> {
    return super.deploy(
      _name,
      _symbol,
      price,
      overrides || {}
    ) as Promise<ERC20SharesGenerator>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, price, overrides || {});
  }
  override attach(address: string): ERC20SharesGenerator {
    return super.attach(address) as ERC20SharesGenerator;
  }
  override connect(signer: Signer): ERC20SharesGenerator__factory {
    return super.connect(signer) as ERC20SharesGenerator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20SharesGeneratorInterface {
    return new utils.Interface(_abi) as ERC20SharesGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20SharesGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20SharesGenerator;
  }
}
