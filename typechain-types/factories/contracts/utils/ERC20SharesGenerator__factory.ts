/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20SharesGenerator,
  ERC20SharesGeneratorInterface,
} from "../../../contracts/utils/ERC20SharesGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600660006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162001d0a38038062001d0a833981810160405281019062000052919062000320565b828281600390805190602001906200006c92919062000098565b5080600490805190602001906200008592919062000098565b505050806005819055505050506200041f565b828054620000a690620003e9565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b18262000166565b810181811067ffffffffffffffff82111715620001d357620001d262000177565b5b80604052505050565b6000620001e862000148565b9050620001f68282620001a6565b919050565b600067ffffffffffffffff82111562000219576200021862000177565b5b620002248262000166565b9050602081019050919050565b60005b838110156200025157808201518184015260208101905062000234565b8381111562000261576000848401525b50505050565b60006200027e6200027884620001fb565b620001dc565b9050828152602081018484840111156200029d576200029c62000161565b5b620002aa84828562000231565b509392505050565b600082601f830112620002ca57620002c96200015c565b5b8151620002dc84826020860162000267565b91505092915050565b6000819050919050565b620002fa81620002e5565b81146200030657600080fd5b50565b6000815190506200031a81620002ef565b92915050565b6000806000606084860312156200033c576200033b62000152565b5b600084015167ffffffffffffffff8111156200035d576200035c62000157565b5b6200036b86828701620002b2565b935050602084015167ffffffffffffffff8111156200038f576200038e62000157565b5b6200039d86828701620002b2565b9250506040620003b08682870162000309565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040257607f821691505b60208210811415620004195762000418620003ba565b5b50919050565b6118db806200042f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063313ce56711610097578063a457c2d711610066578063a457c2d71461029c578063a9059cbb146102cc578063b2bdfa7b146102fc578063dd62ed3e1461031a576100f5565b8063313ce56714610200578063395093511461021e57806370a082311461024e57806395d89b411461027e576100f5565b8063150b7a02116100d3578063150b7a021461016457806318160ddd14610194578063235b6ea1146101b257806323b872dd146101d0576100f5565b806306fdde03146100fa578063095ea7b3146101185780630d4d151314610148575b600080fd5b61010261034a565b60405161010f9190610e8f565b60405180910390f35b610132600480360381019061012d9190610f59565b6103dc565b60405161013f9190610fb4565b60405180910390f35b610162600480360381019061015d9190610fcf565b6103ff565b005b61017e60048036038101906101799190611157565b6104dd565b60405161018b9190611215565b60405180910390f35b61019c61050c565b6040516101a9919061123f565b60405180910390f35b6101ba610516565b6040516101c7919061123f565b60405180910390f35b6101ea60048036038101906101e5919061125a565b61051c565b6040516101f79190610fb4565b60405180910390f35b61020861054b565b60405161021591906112c9565b60405180910390f35b61023860048036038101906102339190610f59565b610554565b6040516102459190610fb4565b60405180910390f35b610268600480360381019061026391906112e4565b61058b565b604051610275919061123f565b60405180910390f35b6102866105d3565b6040516102939190610e8f565b60405180910390f35b6102b660048036038101906102b19190610f59565b610665565b6040516102c39190610fb4565b60405180910390f35b6102e660048036038101906102e19190610f59565b6106dc565b6040516102f39190610fb4565b60405180910390f35b6103046106ff565b6040516103119190611320565b60405180910390f35b610334600480360381019061032f919061133b565b610725565b604051610341919061123f565b60405180910390f35b606060038054610359906113aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610385906113aa565b80156103d25780601f106103a7576101008083540402835291602001916103d2565b820191906000526020600020905b8154815290600101906020018083116103b557829003601f168201915b5050505050905090565b6000806103e76107ac565b90506103f48185856107b4565b600191505092915050565b60011515600660009054906101000a900460ff1615151461041f57600080fd5b610429838361097f565b80600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555032600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104d8600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630846107b4565b505050565b60006001600660006101000a81548160ff02191690831515021790555063150b7a0260e01b9050949350505050565b6000600254905090565b60055481565b6000806105276107ac565b9050610534858285610adf565b61053f858585610b6b565b60019150509392505050565b60006012905090565b60008061055f6107ac565b90506105808185856105718589610725565b61057b919061140b565b6107b4565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105e2906113aa565b80601f016020809104026020016040519081016040528092919081815260200182805461060e906113aa565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b5050505050905090565b6000806106706107ac565b9050600061067e8286610725565b9050838110156106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba906114d3565b60405180910390fd5b6106d082868684036107b4565b60019250505092915050565b6000806106e76107ac565b90506106f4818585610b6b565b600191505092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b90611565565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b906115f7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610972919061123f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e690611663565b60405180910390fd5b6109fb60008383610dec565b8060026000828254610a0d919061140b565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a62919061140b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ac7919061123f565b60405180910390a3610adb60008383610df1565b5050565b6000610aeb8484610725565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b655781811015610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e906116cf565b60405180910390fd5b610b6484848484036107b4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd290611761565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c42906117f3565b60405180910390fd5b610c56838383610dec565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd390611885565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d6f919061140b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dd3919061123f565b60405180910390a3610de6848484610df1565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e30578082015181840152602081019050610e15565b83811115610e3f576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e6182610df6565b610e6b8185610e01565b9350610e7b818560208601610e12565b610e8481610e45565b840191505092915050565b60006020820190508181036000830152610ea98184610e56565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ef082610ec5565b9050919050565b610f0081610ee5565b8114610f0b57600080fd5b50565b600081359050610f1d81610ef7565b92915050565b6000819050919050565b610f3681610f23565b8114610f4157600080fd5b50565b600081359050610f5381610f2d565b92915050565b60008060408385031215610f7057610f6f610ebb565b5b6000610f7e85828601610f0e565b9250506020610f8f85828601610f44565b9150509250929050565b60008115159050919050565b610fae81610f99565b82525050565b6000602082019050610fc96000830184610fa5565b92915050565b600080600060608486031215610fe857610fe7610ebb565b5b6000610ff686828701610f0e565b935050602061100786828701610f44565b925050604061101886828701610f0e565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61106482610e45565b810181811067ffffffffffffffff821117156110835761108261102c565b5b80604052505050565b6000611096610eb1565b90506110a2828261105b565b919050565b600067ffffffffffffffff8211156110c2576110c161102c565b5b6110cb82610e45565b9050602081019050919050565b82818337600083830152505050565b60006110fa6110f5846110a7565b61108c565b90508281526020810184848401111561111657611115611027565b5b6111218482856110d8565b509392505050565b600082601f83011261113e5761113d611022565b5b813561114e8482602086016110e7565b91505092915050565b6000806000806080858703121561117157611170610ebb565b5b600061117f87828801610f0e565b945050602061119087828801610f0e565b93505060406111a187828801610f44565b925050606085013567ffffffffffffffff8111156111c2576111c1610ec0565b5b6111ce87828801611129565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61120f816111da565b82525050565b600060208201905061122a6000830184611206565b92915050565b61123981610f23565b82525050565b60006020820190506112546000830184611230565b92915050565b60008060006060848603121561127357611272610ebb565b5b600061128186828701610f0e565b935050602061129286828701610f0e565b92505060406112a386828701610f44565b9150509250925092565b600060ff82169050919050565b6112c3816112ad565b82525050565b60006020820190506112de60008301846112ba565b92915050565b6000602082840312156112fa576112f9610ebb565b5b600061130884828501610f0e565b91505092915050565b61131a81610ee5565b82525050565b60006020820190506113356000830184611311565b92915050565b6000806040838503121561135257611351610ebb565b5b600061136085828601610f0e565b925050602061137185828601610f0e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113c257607f821691505b602082108114156113d6576113d561137b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061141682610f23565b915061142183610f23565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611456576114556113dc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006114bd602583610e01565b91506114c882611461565b604082019050919050565b600060208201905081810360008301526114ec816114b0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061154f602483610e01565b915061155a826114f3565b604082019050919050565b6000602082019050818103600083015261157e81611542565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006115e1602283610e01565b91506115ec82611585565b604082019050919050565b60006020820190508181036000830152611610816115d4565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061164d601f83610e01565b915061165882611617565b602082019050919050565b6000602082019050818103600083015261167c81611640565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116b9601d83610e01565b91506116c482611683565b602082019050919050565b600060208201905081810360008301526116e8816116ac565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061174b602583610e01565b9150611756826116ef565b604082019050919050565b6000602082019050818103600083015261177a8161173e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006117dd602383610e01565b91506117e882611781565b604082019050919050565b6000602082019050818103600083015261180c816117d0565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061186f602683610e01565b915061187a82611813565b604082019050919050565b6000602082019050818103600083015261189e81611862565b905091905056fea2646970667358221220c4512d31559910e81db5bcc1b50532a29f2da4e4809ab0d47095fc3f7b7c3e5e64736f6c63430008090033";

type ERC20SharesGeneratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20SharesGeneratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20SharesGenerator__factory extends ContractFactory {
  constructor(...args: ERC20SharesGeneratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20SharesGenerator> {
    return super.deploy(
      _name,
      _symbol,
      price,
      overrides || {}
    ) as Promise<ERC20SharesGenerator>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, price, overrides || {});
  }
  override attach(address: string): ERC20SharesGenerator {
    return super.attach(address) as ERC20SharesGenerator;
  }
  override connect(signer: Signer): ERC20SharesGenerator__factory {
    return super.connect(signer) as ERC20SharesGenerator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20SharesGeneratorInterface {
    return new utils.Interface(_abi) as ERC20SharesGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20SharesGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20SharesGenerator;
  }
}
